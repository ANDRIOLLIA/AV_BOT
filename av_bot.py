import telebot
from telebot import types
import sqlite3

token = '7674116155:AAHi_bfHnnmjho00x_Df1LsU3kMNu-kdTeE'
bot = telebot.TeleBot(token)

user_name = None
user_phone = None
user_address = None
user_post_address = None
ordi = None

ADMIN_IDS = [5242512520]

full_user_order = ''

@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    goods = types.KeyboardButton('–ù–∞—à–∏ —Ç–æ–≤–∞—Ä—ãüõçÔ∏è')
    feedback = types.KeyboardButton('–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å‚òéÔ∏è')
    order1 = types.KeyboardButton('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑üì¶')
    adm = types.KeyboardButton('AdM PaNeI_‚ùå')
    if message.chat.id in ADMIN_IDS:
        markup.add(goods, feedback, order1, adm)
    else:
        markup.add(goods, feedback, order1)

    bot.send_message(message.chat.id,'–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —Ä–∞–¥—ã –≤–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –Ω–∞—à–µ–º –º–∞–≥–∞–∑–∏–Ω–µ!\n–ù–∞–¥–µ–µ–º—Å—è, –≤—ã –ø–æ–¥–±–µ—Ä–µ—Ç–µ —á—Ç–æ-—Ç–æ –¥–ª—è —Å–µ–±—è!',reply_markup=markup)

@bot.message_handler(content_types=['text'])
def bot_message(message):
    if message.chat.type == 'private':

        if message.text == '–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å‚òéÔ∏è':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
            markup.add(back)
            bot.send_message(message.chat.id,'–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, —Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –Ω–∏–º:\n1.@sddmnx',reply_markup=markup)

        elif message.text == '–ù–∞—à–∏ —Ç–æ–≤–∞—Ä—ãüõçÔ∏è':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            back = types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
            markup.add(back)
            bot.send_message(message.chat.id, '–ù–∞—à–∏ —Ç–æ–≤–∞—Ä—ãüõçÔ∏è', reply_markup=markup)

        elif message.text == '‚¨ÖÔ∏è–ù–∞–∑–∞–¥':
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            goods = types.KeyboardButton('–ù–∞—à–∏ —Ç–æ–≤–∞—Ä—ãüõçÔ∏è')
            feedback = types.KeyboardButton('–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å‚òéÔ∏è')
            order1 = types.KeyboardButton('–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑üì¶')
            markup.add(goods, feedback, order1)
            bot.send_message(message.chat.id, '‚¨ÖÔ∏è–ù–∞–∑–∞–¥', reply_markup = markup)

        elif message.text == 'AdM PaNeI_‚ùå':
            markup = types.ReplyKeyboardMarkup(resize_keyboard = True)
            add_goods = types.KeyboardButton('–î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—ÄüõçÔ∏è')
            delete_goods = types.KeyboardButton('–£–¥–∞–ª–∏—Ç—å —Ç–æ–≤–∞—Ä‚ùå')
            back = types.KeyboardButton('‚¨ÖÔ∏è–ù–∞–∑–∞–¥')
            markup.add(add_goods).add(delete_goods).add(back)
            bot.send_message(message.chat.id, 'AdM PaNeI_‚ùå', reply_markup = markup)

        elif message.text == '–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑üì¶':
            bot.send_message(message.chat.id, '–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑üì¶')
            start_order(message)

def start_order(message):


    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –§–ò–û!')
    global full_user_order
    full_user_order = '–í–∞—à–µ –§–ò–û: \n'

    conn = sqlite3.connect('database.sql')
    cursor = conn.cursor()
    cursor.execute('CREATE TABLE IF NOT EXISTS userOrder (id INTEGER PRIMARY KEY AUTOINCREMENT, full_name TEXT, phone_number TEXT, address TEXT, post_address TEXT)')
    conn.commit()
    cursor.execute('CREATE TABLE IF NOT EXISTS userOrder (id INTEGER PRIMARY KEY AUTOINCREMENT, full_name TEXT, phone_number TEXT, address TEXT, post_address TEXT)')
    conn.commit()
    cursor.close()
    conn.close()

    bot.register_next_step_handler(message, phone_usernumber)

def phone_usernumber(message):
    global user_name
    user_name = message.text.strip()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –§–ò–û
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞!')
    global full_user_order
    full_user_order = '–í–∞—à–µ –§–ò–û: ' + user_name + '\n'  # –î–æ–±–∞–≤–ª—è–µ–º –§–ò–û –≤ –∑–∞–∫–∞–∑
    bot.register_next_step_handler(message, useraddress)

def useraddress(message):
    global user_phone
    user_phone = message.text.strip()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∞–¥—Ä–µ—Å!')
    global full_user_order
    full_user_order += '–í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞: ' + user_phone + '\n'  # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –≤ –∑–∞–∫–∞–∑
    bot.register_next_step_handler(message, post_useraddress)

def post_useraddress(message):
    global user_address
    user_address = message.text.strip()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥—Ä–µ—Å
    bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –∞–¥—Ä–µ—Å –±–ª–∏–∂–∞–π—à–µ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è!')
    global full_user_order
    full_user_order += '–í–∞—à –∞–¥—Ä–µ—Å: ' + user_address + '\n'  # –î–æ–±–∞–≤–ª—è–µ–º –∞–¥—Ä–µ—Å –≤ –∑–∞–∫–∞–∑
    bot.register_next_step_handler(message, final_post_useraddress)

def final_post_useraddress(message):
    global user_post_address
    user_post_address = message.text.strip()  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∞–¥—Ä–µ—Å –±–ª–∏–∂–∞–π—à–µ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è
    global full_user_order
    full_user_order += '–ê–¥—Ä–µ—Å –±–ª–∏–∂–∞–π—à–µ–≥–æ –ø–æ—á—Ç–æ–≤–æ–≥–æ –æ—Ç–¥–µ–ª–µ–Ω–∏—è: ' + user_post_address + '\n'  # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–Ω—ã–π –∑–∞–∫–∞–∑

    conn = sqlite3.connect('database.sql')
    cur = conn.cursor()
    cur.execute('INSERT INTO userOrder (full_name, phone_number, address, post_address) VALUES (?, ?, ?, ?)',(user_name, user_phone, user_address, user_post_address))
    conn.commit()
    cur.close()
    conn.close()

    bot.send_message(message.chat.id, full_user_order)
    bot.send_message('@AndreyTestChat', full_user_order)
    bot.send_message(message.chat.id, '–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!')
    start(message)


bot.polling(none_stop = True)